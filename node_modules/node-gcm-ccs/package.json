{
  "_args": [
    [
      {
        "raw": "git+https://github.com/jacobp100/node-gcm-ccs.git",
        "scope": null,
        "escapedName": null,
        "name": null,
        "rawSpec": "git+https://github.com/jacobp100/node-gcm-ccs.git",
        "spec": "git+https://github.com/jacobp100/node-gcm-ccs.git",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:jacobp100/node-gcm-ccs.git",
          "sshUrl": "git+ssh://git@github.com/jacobp100/node-gcm-ccs.git",
          "httpsUrl": "git+https://github.com/jacobp100/node-gcm-ccs.git",
          "gitUrl": "git://github.com/jacobp100/node-gcm-ccs.git",
          "shortcut": "github:jacobp100/node-gcm-ccs",
          "directUrl": "https://raw.githubusercontent.com/jacobp100/node-gcm-ccs/master/package.json"
        }
      },
      "/home/leo/mHelp-api"
    ]
  ],
  "_from": "git+https://github.com/jacobp100/node-gcm-ccs.git",
  "_id": "node-gcm-ccs@0.0.1",
  "_inCache": true,
  "_location": "/node-gcm-ccs",
  "_phantomChildren": {},
  "_requested": {
    "raw": "git+https://github.com/jacobp100/node-gcm-ccs.git",
    "scope": null,
    "escapedName": null,
    "name": null,
    "rawSpec": "git+https://github.com/jacobp100/node-gcm-ccs.git",
    "spec": "git+https://github.com/jacobp100/node-gcm-ccs.git",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:jacobp100/node-gcm-ccs.git",
      "sshUrl": "git+ssh://git@github.com/jacobp100/node-gcm-ccs.git",
      "httpsUrl": "git+https://github.com/jacobp100/node-gcm-ccs.git",
      "gitUrl": "git://github.com/jacobp100/node-gcm-ccs.git",
      "shortcut": "github:jacobp100/node-gcm-ccs",
      "directUrl": "https://raw.githubusercontent.com/jacobp100/node-gcm-ccs/master/package.json"
    }
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "git+https://github.com/jacobp100/node-gcm-ccs.git#a80b1595507aaad485f083e0236244a0d8407e70",
  "_shasum": "1ca57fce404a7d96695b693374f00a7f5a9ac1a2",
  "_shrinkwrap": null,
  "_spec": "git+https://github.com/jacobp100/node-gcm-ccs.git",
  "_where": "/home/leo/mHelp-api",
  "author": "",
  "bugs": {
    "url": "https://github.com/jacobp100/node-gcm-ccs/issues"
  },
  "dependencies": {
    "node-xmpp-client": "~2.1.0"
  },
  "description": "Google Cloud Messaging via XMPP",
  "devDependencies": {},
  "gitHead": "a80b1595507aaad485f083e0236244a0d8407e70",
  "homepage": "https://github.com/jacobp100/node-gcm-ccs",
  "license": "BSD-2-Clause",
  "main": "node-gcm-ccs.js",
  "name": "node-gcm-ccs",
  "optionalDependencies": {},
  "readme": "Getting Started\n===============\nInstall via\n```\nnpm install git+https://github.com/jacobp100/node-gcm-ccs.git\n```\n\nUse via\n```js\nvar GCM = require('node-gcm-ccs');\nvar gcm = GCM(<project number>, <api key>);\n```\n\nGetting an API Key\n------------------\n* Go to `https://console.developers.google.com`, create a project and open it\n* Navigate to `overview`, and you'll see your `<project id>` at the top\n* Go to `APIs & auth -> APIs`, add `Google Cloud Messaging for Android`\n* Go to `APIs & auth -> credentials`, and create a new public `<api key>`\n\nFunctions\n=========\nSend Message\n------------\nUse `send` to send a message.\n```js\ngcm.send(to, data, [options, callback(error, messageId, to)]);\n```\nArgument            | Details\n------------------- | -------\nto                  | A single user\ndata                | Data to be sent to the client\noptions (optional)  | See _Message Paremeters_ from https://developer.android.com/google/gcm/server.html#send-msg. If `delivery_receipt_requested = true`, an event will be sent when the message is received by the target.\ncallback (optional) | `function(error, messageId, to)` called back individually for each target.\n\nEnd Connection\n--------------\n```\ngcm.end;\n```\n\nEvents\n======\nEvents are defined as below.\n```js\ngcm.on('message', function(messageId, from, category, data)); // Messages received from client (excluding receipts)\ngcm.on('receipt', function(messageId, from, category, data)); // Only fired for messages where options.delivery_receipt_requested = true\n\ngcm.on('connected', console.log);\ngcm.on('disconnected', console.log);\ngcm.on('online', console.log);\ngcm.on('error', console.log);\n```\n\nExample\n=======\n```js\nvar GCM = require('node-gcm-ccs');\nvar gcm = GCM(<project id>, <api key>);\n\ngcm.on('message', function(messageId, from, category, data) {\n\tconsole.log('received message', arguments);\n});\n\ngcm.on('receipt', function(messageId, from, category, data) {\n\tconsole.log('received receipt', arguments);\n});\n\ngcm.send(<device id>, { message: 'hello world' }, { delivery_receipt_requested: true }, function(err, messageId, to) {\n\tif (!err) {\n\t\tconsole.log('sent message to', to, 'with message_id =', messageId);\n\t} else {\n\t\tconsole.log('failed to send message');\n\t}\n});\n```\nEcho Client\n-----------\n```js\ngcm.on('message', function(_, from, __, data) {\n\tgcm.send(from, data);\n});\n```\n\nNotes on GCM\n============\n* No events are emitted from GCM or this library when a device new registers: you'll have to send a message from the device and process it yourself\n* This library doesn't have functions to create user notifications (https://developer.android.com/google/gcm/notifications.html). However, if you implement this yourself, you'll be able to send to a user group by paassing the `notification_key_name` as a `device_id` for `gcm.send`.\n* Occasionally, GCM performs load balancing, so the connection is sometimes restarted. This library handles this transparently, and your messages will be queued in these situations.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/jacobp100/node-gcm-ccs.git"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "0.0.1"
}
